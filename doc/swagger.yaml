components:
  schemas:
    BadRequestMalformedBodyOrderError:
      properties:
        description:
          default: The request received has missing informations in the body or bad
            formatting
          title: Description
          type: string
        error_code:
          default: 400
          title: Error Code
          type: integer
      title: BadRequestMalformedBodyOrderError
      type: object
    CategoriesResponse:
      properties:
        num_products_per_categories:
          additionalProperties:
            type: integer
          description: Map with number of products per categories
          title: Num Products Per Categories
          type: object
      required:
      - num_products_per_categories
      title: CategoriesResponse
      type: object
    OrderBody:
      properties:
        email:
          description: User email
          title: Email
          type: string
        payment_info:
          default: {}
          description: Payment informations
          title: Payment Info
          type: object
        products:
          description: Products choosed by the customer
          items: {}
          title: Products
          type: array
        total:
          description: Total cost of the order
          title: Total
          type: number
      required:
      - products
      - email
      - total
      title: OrderBody
      type: object
    OrderResponse:
      properties:
        discount_points_earned:
          default: 0
          description: Discount points earned making this order
          title: Discount Points Earned
          type: integer
        outcome:
          description: Outcome of the order
          title: Outcome
          type: string
        total:
          description: Total cost of the order
          title: Total
          type: number
      required:
      - outcome
      - total
      title: OrderResponse
      type: object
    PageNotFoundError:
      properties:
        description:
          default: The page requested was not found...
          title: Description
          type: string
        error_code:
          default: 404
          title: Error Code
          type: integer
      title: PageNotFoundError
      type: object
    PaymentRequiredError:
      properties:
        description:
          default: Credit card does not have sufficient funds to make the order
          title: Description
          type: string
        error_code:
          default: 402
          title: Error Code
          type: integer
      title: PaymentRequiredError
      type: object
    Product:
      properties:
        category:
          description: Category of the product
          title: Category
          type: string
        discount_multiplier:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          description: Multiplies the discount points obtained by the number of the
            multiplier
          title: Discount Multiplier
        id:
          description: Id used to identify univocally a product
          title: Id
          type: string
        image:
          description: Image of the product
          title: Image
          type: string
        name:
          description: Name of the product
          title: Name
          type: string
        price:
          description: Price of a single product
          title: Price
          type: number
        quantity:
          description: Quantity of the product stored
          title: Quantity
          type: integer
      required:
      - id
      - category
      - name
      - price
      - quantity
      - image
      title: Product
      type: object
    ProductResponse:
      properties:
        products:
          items:
            $ref: '#/components/schemas/Product'
          title: Products
          type: array
      required:
      - products
      title: ProductResponse
      type: object
    ValidationErrorModel:
      properties:
        ctx:
          anyOf:
          - type: object
          - type: 'null'
          description: an optional object which contains values required to render
            the error message.
          title: Error context
        loc:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: 'the error''s location as a list. '
          title: Location
        msg:
          anyOf:
          - type: string
          - type: 'null'
          description: a computer-readable identifier of the error type.
          title: Message
        type_:
          anyOf:
          - type: string
          - type: 'null'
          description: a human readable explanation of the error.
          title: Error Type
      title: ValidationErrorModel
      type: object
info:
  title: Cart Market API
  version: 1.0.0
openapi: 3.1.0
paths:
  /categories:
    get:
      operationId: products_categories_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
          description: OK
      summary: Get categories and number of products per category
      tags:
      - Category
  /category:
    get:
      operationId: products_category_get
      parameters:
      - description: Page number
        in: query
        name: num_page
        required: false
        schema:
          anyOf:
          - minimum: 1.0
            type: integer
          - type: 'null'
          default: 1
          description: Page number
          title: Num Page
      - description: Category selected
        in: query
        name: type
        required: true
        schema:
          description: Category selected
          title: Type
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotFoundError'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      summary: Get articles by category
      tags:
      - Category
  /order:
    post:
      operationId: orders_order_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestMalformedBodyOrderError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequiredError'
          description: Payment Required
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      summary: Receives the order and store the informations in the database and updating
        the quantities bought
      tags:
      - Order
  /products:
    get:
      operationId: products_products_get
      parameters:
      - description: Page number
        in: query
        name: page
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          description: Page number
          title: Page
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotFoundError'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      summary: Get some products by page
      tags:
      - Product
  /search:
    get:
      operationId: products_search_get
      parameters:
      - description: Page number
        in: query
        name: page
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          description: Page number
          title: Page
      - description: Article with this substring present in the name
        in: query
        name: article
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          default: ''
          description: Article with this substring present in the name
          title: Article
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageNotFoundError'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ValidationErrorModel'
                type: array
          description: Unprocessable Entity
      summary: Search articles by name
      tags:
      - Search
tags:
- name: Product
- name: Category
- name: Search
- name: Order
